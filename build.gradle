buildscript {
    def nexus_username = System.getProperty("nexus_username")
    def nexus_password = System.getProperty("nexus_password")
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPlugin}")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractGradlePlugin}"
        classpath "com.palantir.gradle.gitversion:gradle-git-version:${gradleGitVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.git-version'

def nexus_username = System.getProperty("nexus_username")
def nexus_password = System.getProperty("nexus_password")
def sonar_password = System.getProperty("sonar_password")

group = 'com.demo'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
    maven{ url = uri("https://maven.aliyun.com/repository/central") }
    maven{ url = uri("https://maven.aliyun.com/repository/public") }
}

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
    test.java.srcDir "src/test/java"
}

dependencies {
    //spring boot
    implementation ('org.springframework.boot:spring-boot-starter-web'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-starter"

    //camel
    implementation "org.apache.camel.springboot:camel-spring-boot-starter"
    implementation "org.apache.camel.springboot:camel-stream-starter"
    implementation "org.apache.camel.springboot:camel-servlet-starter"
    implementation "org.apache.camel.springboot:camel-jackson-starter"
    implementation "org.apache.camel.springboot:camel-swagger-java-starter"  //support swagger api-doc
    implementation "org.apache.camel.springboot:camel-http-starter"  //use http as rest producer
    implementation 'org.apache.camel:camel-management' //support hawtio

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.camel:camel-test-spring'

    //hawtio
    implementation 'io.hawt:hawtio-springboot:2.14.0'

}

dependencyManagement {
    imports {
        //Camel BOM
        mavenBom "org.apache.camel.springboot:camel-spring-boot-dependencies:${camelVersion}"
        //spring Cloud BOM
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}